{"version":3,"sources":["comps/homeStrip.js","comps/home.js","comps/general_comps/clientFooter.js","comps/general_comps/clientHeader.js","comps/layoutClient.js","services/apiService.js","misc_comps/authAdminComp.js","comps_admin/addProduct.js","comps_admin/addCategory.js","comps_admin/categoriesList.js","comps_admin/editProduct.js","comps_admin/headerAdmin.js","comps_admin/layoutAdmin.js","comps_admin/loginAdmin.js","misc_comps/pageLinks.js","comps_admin/productAdminList.js","comps_admin/editCategory.js","comps_admin/usersList.js","comps_admin/logoutAdmin.js","comps/articelsCatgoryList.js","comps/articelsStrip.js","services/localServices.js","comps/productItem.js","comps/productArticels.js","comps/articelsUser.js","comps/productListPage.js","comps/productInfo.js","appRoute.js","App.js","index.js"],"names":["HomeStrip","props","style","backgroundImage","className","Home","Fragment","ClientFooter","ClientHeader","to","placeholder","type","LayoutClient","API_URL","doApiGet","_url","a","axios","get","headers","localStorage","data","doApiMethod","_method","_body","method","url","JSON","stringify","AuthAdminComp","nav","useNavigate","useEffect","doApi","toast","error","role","console","log","response","AddProduct","useState","cat_ar","setCatAr","btnSent","setBtnSent","useForm","register","handleSubmit","errors","formState","nameRef","required","minLengt","maxLength","infoRef","titleRef","textRef","cat_short_idRef","img_urlRef","qtyRef","min","max","resp","doFormApi","formData","_id","success","alert","onSubmit","name","rows","info","title","text","defaultValue","qty","value","map","item","short_id","cat_short_id","img_url","disabled","AddCategory","btnSend","setBtnSend","url_nameRef","CategoriesList","ar","setAr","delCategory","_idDel","window","confirm","deletedCount","i","url_name","onClick","length","EditProduct","product","setProduct","params","useParams","minLength","urlProduct","id","resp2","modifiedCount","warning","HeaderAdmin","LayoutAdmin","LoginAdmin","_dataBody","token","setItem","err","emailRef","pattern","passwordRef","email","password","PageLinks","pages","setPages","apiUrlAmount","Math","ceil","amount","perPage","Array","clsCss","urlLinkTo","ProductAdminList","numPage","setPageNum","catObj","setCatObj","location","useLocation","resp0","temp_ar","categories_data","forEach","urlParams","URLSearchParams","search","pageQuery","delProduct","EditCategory","category","setCategory","UsersList","delUser","changeRole","_userId","_role","address","LogoutAdmin","removeItem","ArticelsCatgoryList","SetAr","ArticlsStrip","VISITED_PRODUCT","addProdVisitedToLocal","_short_id","local_ar","split","includes","unshift","splice","join","ProductItem","ProductArticels","vistedProds","ArticelsUser","ProductsListPage","urlCategory","cat_url","resp1","urlProds","minHeight","ProductInfo","SetProduct","src","alt","AppRoute","path","element","index","position","theme","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.791ae85d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction HomeStrip(props) {\r\n    return (\r\n        <div style={{ backgroundImage: \"url(/images/slider_img.png)\" }} className='strip_home container-fluid d-flex align-item-center'>\r\n            <div className='container text-center'>\r\n                <h2>  welcome to my webSide</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeStrip","import React from 'react'\r\nimport HomeStrip from './homeStrip'\r\nimport \"./css/home.css\"\r\nfunction Home(props) {\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <HomeStrip />\r\n        </React.Fragment>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\n\r\nfunction ClientFooter(props) {\r\n    return (\r\n        <footer className='footer-client  container-fluid bg-dark text-white'>\r\n            <div className='container text-center'>\r\n                All right reserved to natan\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default ClientFooter","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { BsSearch } from \"react-icons/bs\"\r\n\r\nfunction ClientHeader(props) {\r\n    return (\r\n        <header className='shadow header-client container-fluid'>\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between align-items-center\">\r\n                    <div className='logo col-md-auto'>\r\n                        <Link to=\"/\">\r\n                            <h2>Koko makolet</h2>\r\n                        </Link>\r\n                    </div>\r\n                    <nav className='col-md-auto'>\r\n                        <div className='d-md-flex align-items-center'>\r\n                            <div className='links_header me-md-3'>\r\n                                <Link to=\"/\">Home</Link>\r\n                                <Link to=\"articelsUser\">Articels</Link>\r\n                                <Link to=\"#\">Favorites</Link>\r\n                            </div>\r\n                            <div className='search_header d-flex'>\r\n                                <input placeholder='search...' type=\"text\" className='form-control' />\r\n                                <button className='btn'><BsSearch className='icon1' /></button>\r\n                            </div>\r\n                            <div className='log_in_out'>\r\n                                <Link to=\"#\">Log in</Link>/\r\n                                <Link to=\"#\">Sign up</Link>\r\n                            </div>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default ClientHeader","import React from 'react'\r\nimport { Outlet } from 'react-router-dom'\r\nimport ClientFooter from './general_comps/clientFooter';\r\nimport ClientHeader from './general_comps/clientHeader';\r\nimport \"./css/client.css\"\r\nimport \"./css/headerFooter.css\"\r\n\r\nfunction LayoutClient(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <ClientHeader />\r\n            <Outlet />\r\n            <ClientFooter />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default LayoutClient","import axios from \"axios\";\r\n\r\nexport const API_URL = \"http://localhost:3002\";\r\n// export const API_URL = \"http://localhost:3002\";\r\n\r\nexport const doApiGet = async (_url) => {\r\n    try {\r\n\r\n        let data = await axios.get(_url, {\r\n            headers: {\r\n\r\n                'x-api-key': localStorage[\"tok\"],\r\n                'content-type': \"application/json\"\r\n            }\r\n        })\r\n        return data;\r\n    }\r\n\r\n    catch (err) {\r\n        throw err\r\n    }\r\n}\r\nexport const doApiMethod = async (_url, _method, _body) => {\r\n    try {\r\n\r\n        let data = await axios({\r\n            method: _method,\r\n            url: _url,\r\n            data: JSON.stringify(_body),\r\n            headers: {\r\n\r\n                'x-api-key': localStorage[\"tok\"],\r\n                'content-type': \"application/json\"\r\n            }\r\n        });\r\n\r\n        return data\r\n    }\r\n\r\n    catch (err) {\r\n        throw err\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { API_URL, doApiGet } from '../services/apiService'\r\n\r\nfunction AuthAdminComp(props) {\r\n    let nav = useNavigate();\r\n    // if to admin no token he cant stay here\r\n    useEffect(() => {\r\n        if (localStorage[\"tok\"]) {\r\n            doApi();\r\n        }\r\n        else {\r\n            toast.error(\"you must be admin to be here\")\r\n            nav(\"/admin\")\r\n        }\r\n    }, [])\r\n\r\n    const doApi = async () => {\r\n        let url = API_URL + \"/users/myInfo\";\r\n        try {\r\n            let resp = await doApiGet(url)\r\n            // console.log(resp.data);\r\n            if (resp.data.role != \"admin\") {\r\n                toast.error(\"you must be admin to be here\")\r\n                nav(\"/admin\")\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.log(err.response)\r\n            toast.error(\"you must be admin to be here\")\r\n            nav(\"/admin\")\r\n        }\r\n    }\r\n    return (\r\n        <React.Fragment></React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AuthAdminComp","import React, { useEffect, useState } from 'react';\r\nimport { useForm } from \"react-hook-form\"\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport AuthAdminComp from '../misc_comps/authAdminComp'\r\nimport { API_URL, doApiGet, doApiMethod } from '../services/apiService'\r\n\r\nfunction AddProduct(props) {\r\n    let [cat_ar, setCatAr] = useState([]);\r\n    let [btnSent, setBtnSent] = useState(false);\r\n    let nav = useNavigate()\r\n    let { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    let nameRef = register(\"name\", { required: true, minLengt: 2, maxLength: 99 })\r\n    let infoRef = register(\"info\", { required: true, minLengt: 2, maxLength: 99 })\r\n    let titleRef = register(\"title\", { required: true, minLengt: 2, maxLength: 299 })\r\n    let textRef = register(\"text\", { required: true, minLengt: 2, maxLength: 5399 })\r\n    let cat_short_idRef = register(\"cat_short_id\", { required: false, minLengt: 2, maxLength: 99 })\r\n    let img_urlRef = register(\"img_url\", { required: true, minLengt: 2, maxLength: 600 })\r\n    let qtyRef = register(\"qty\", { required: false, min: 1, max: 20 })\r\n\r\n    useEffect(() => {\r\n        doApi()\r\n    }, [])\r\n    const doApi = async () => {\r\n        let url = API_URL + \"/categories\";\r\n        let resp = await doApiGet(url);\r\n        console.log(resp.data);\r\n        setCatAr(resp.data);\r\n    }\r\n    const onSubForm = (formData) => {\r\n        console.log(formData);\r\n        setBtnSent(true);\r\n        doFormApi(formData);\r\n    }\r\n\r\n    const doFormApi = async (formData) => {\r\n        let url = API_URL + \"/products\";\r\n        try {\r\n            let resp = await doApiMethod(url, \"POST\", formData);\r\n            console.log(resp.data);\r\n            if (resp.data._id) {\r\n                toast.success(\"product added\")\r\n\r\n                nav(\"/admin/products\")\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.log(err.response);\r\n            alert(\"There problem try again leter\")\r\n            nav(\"/admin/products\")\r\n        }\r\n    }\r\n    return (\r\n        <div className='container'>\r\n            <AuthAdminComp />\r\n            <h1>Add new product</h1>\r\n            <form onSubmit={handleSubmit(onSubForm)} className='col-md-6 p-3 shadow'>\r\n                <label>Name:</label>\r\n                <input {...nameRef} type=\"text\" className='form-control' />\r\n                {errors.name ? <small className='text-danger d-block'>* Enter valid name 2 to 99</small> : \"\"}\r\n                <label>info:</label>\r\n                <textarea {...infoRef} className='form-control' rows=\"2\"></textarea>\r\n                {errors.info ? <small className='text-danger d-block'>* Enter valid info 2 to 299</small> : \"\"}\r\n                <label>title:</label>\r\n                <input {...titleRef} type=\"text\" className='form-control' />\r\n                {errors.title ? <small className='text-danger d-block'>* Enter valid title 2 to 299</small> : \"\"}\r\n\r\n                <label>text:</label>\r\n                <textarea {...textRef} className='form-control' rows=\"3\"></textarea>\r\n                {errors.text ? <small className='text-danger d-block'>* Enter valid text 2 to 5899</small> : \"\"}\r\n\r\n                <label>qty:</label>\r\n                <input {...qtyRef} type=\"number\" defaultValue=\"1\" className='form-control' />\r\n                {errors.qty ? <small className='text-danger d-block'>* Enter valid qty 2 to 99</small> : \"\"}\r\n\r\n                <label>category:</label>\r\n                <select {...cat_short_idRef} className='form-select'>\r\n                    <option value=\"\" >Choose Category</option>\r\n                    {cat_ar.map(item => {\r\n                        return (\r\n                            <option key={item._id} value={item.short_id}>{item.name}</option>\r\n                        )\r\n                    })}</select>\r\n                {errors.cat_short_id ? <small className='text-danger d-block'>* Choose one categore </small> : \"\"}\r\n                <label>img url:</label>\r\n                <input {...img_urlRef} type=\"text\" className='form-control' />\r\n                {errors.img_url ? <small className='text-danger d-block'>* Enter valid img_url </small> : \"\"}\r\n                <button disabled={btnSent} className='btn btn-info mt-2'>Add new product</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddProduct","import React, { useState } from 'react'\r\nimport { useForm } from \"react-hook-form\"\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport AuthAdminComp from '../misc_comps/authAdminComp'\r\nimport { API_URL, doApiGet, doApiMethod } from '../services/apiService'\r\n\r\nfunction AddCategory(props) {\r\n\r\n    let [btnSend, setBtnSend] = useState(false);\r\n\r\n    let nav = useNavigate()\r\n    let { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    let nameRef = register(\"name\", { required: true, minLengt: 2, maxLength: 99 })\r\n    let url_nameRef = register(\"url_name\", { required: true, minLengt: 2, maxLength: 200 })\r\n    let img_urlRef = register(\"img_url\", { required: true, minLengt: 2, maxLength: 250 })\r\n\r\n    const onSubForm = (formData) => {\r\n        // console.log(formData);\r\n        setBtnSend(true);\r\n        doFormApi(formData);\r\n    }\r\n\r\n    const doFormApi = async (formData) => {\r\n        let url = API_URL + \"/categories\";\r\n        try {\r\n            let resp = await doApiMethod(url, \"POST\", formData);\r\n            console.log(resp.data);\r\n            if (resp.data._id) {\r\n                toast.success(\"Categories added\");\r\n                nav(\"/admin/categories\")\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.log(err.response);\r\n            alert(\"There problem try again leter\")\r\n            nav(\"/admin/categories\")\r\n        }\r\n    }\r\n    return (\r\n        <div className='container'>\r\n            <AuthAdminComp />\r\n            <h1>Add new product</h1>\r\n            <form onSubmit={handleSubmit(onSubForm)} className='col-md-6 p-3 shadow'>\r\n                <label>Name:</label>\r\n                <input {...nameRef} type=\"text\" className='form-control' />\r\n                {errors.name ? <small className='text-danger d-block'>* Enter valid name 2 to 99</small> : \"\"}\r\n                <label>url name:</label>\r\n                <input {...url_nameRef} type=\"text\" className='form-control' />\r\n                {errors.url_nameRef ? <small className='text-danger d-block'>* Enter valid url_name 2 to 200</small> : \"\"}\r\n                <label>Img url</label>\r\n                <input {...img_urlRef} type=\"text\" className='form-control' />\r\n                {errors.img_url ? <small className='text-danger d-block'>* you need to add img_url 2 to 450</small> : \"\"}\r\n\r\n                <button className='mt-4 btn btn-info' disabled={btnSend}> Add new category</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddCategory","import React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport AuthAdminComp from '../misc_comps/authAdminComp';\r\nimport { API_URL, doApiGet, doApiMethod } from '../services/apiService';\r\n\r\nfunction CategoriesList(props) {\r\n    let [ar, setAr] = useState([]);\r\n    let nav = useNavigate()\r\n\r\n    useEffect(() => {\r\n        doApi()\r\n    }, [])\r\n\r\n    const doApi = async () => {\r\n        let url = API_URL + \"/categories\";\r\n        try {\r\n            let resp = await doApiGet(url);\r\n            // console.log(resp.data);\r\n            setAr(resp.data);\r\n        }\r\n        catch (err) {\r\n            alert(\"there problem come back later\")\r\n            if (err.response) {\r\n                console.log(err.response.data)\r\n            }\r\n        }\r\n    }\r\n\r\n    const delCategory = async (_idDel) => {\r\n        if (window.confirm(\"Are you sure you want to delete?\")) {\r\n            try {\r\n                let url = API_URL + \"/categories/\" + _idDel;\r\n                let resp = await doApiMethod(url, \"DELETE\", {});\r\n                console.log(resp.data);\r\n                if (resp.data.deletedCount) {\r\n                    toast.info(\"Category delted !\");\r\n                }\r\n                // for show the new list without the product that we deleted\r\n                doApi();\r\n            }\r\n            catch (err) {\r\n                console.log(err.response);\r\n                alert(\"there problem , try again later\")\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <AuthAdminComp />\r\n            <h1>List of Categoires in system</h1>\r\n            <Link className='btn btn-success' to=\"/admin/addcategory\">Add new Category</Link>\r\n            <table className='table table-striped'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>name</th>\r\n                        <th>url_name</th>\r\n                        <th>short_id</th>\r\n                        <th>Img url</th>\r\n                        <th>del/edit</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {ar.map((item, i) => {\r\n                        return (\r\n                            <tr key={item._id}>\r\n                                <td>{i + 1}</td>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.url_name}</td>\r\n                                <td>{item.short_id}</td>\r\n                                <td>{item.img_url}</td>\r\n\r\n                                <td>\r\n                                    <button onClick={() => { delCategory(item._id) }} className='badge bg-danger mx-1'>X</button>\r\n                                    <button onClick={() => {\r\n                                        nav(\"/admin/editCategory/\" + item.url_name)\r\n                                    }} className='badge bg-info'>Edit</button>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            {ar.length === 0 ? <h2>Loading...</h2> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoriesList;","import React, { useEffect, useState } from 'react';\r\nimport { useForm } from \"react-hook-form\"\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport AuthAdminComp from '../misc_comps/authAdminComp'\r\nimport { API_URL, doApiGet, doApiMethod } from '../services/apiService'\r\n\r\n\r\nfunction EditProduct(props) {\r\n    let [cat_ar, setCatAr] = useState([]);\r\n    let [product, setProduct] = useState({});\r\n    let params = useParams();\r\n\r\n    let nav = useNavigate()\r\n    let { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    let nameRef = register(\"name\", { required: true, minLength: 2, maxLength: 150 })\r\n    let infoRef = register(\"info\", { required: true, minLength: 2, maxLength: 500 })\r\n    let titleRef = register(\"title\", { required: true, minLength: 2, maxLength: 150 })\r\n    let textRef = register(\"text\", { required: true, minLength: 2, maxLength: 11150 })\r\n    let cat_short_idRef = register(\"cat_short_id\", { required: true, minLength: 1, maxLength: 99 })\r\n    let img_urlRef = register(\"img_url\", { required: false, minLength: 3, maxLength: 500 })\r\n    let qtyRef = register(\"qty\", { required: true, min: 1, max: 9999 })\r\n\r\n    useEffect(() => {\r\n        doApi()\r\n    }, [])\r\n\r\n    // get the catgories for select box\r\n    const doApi = async () => {\r\n        let url = API_URL + \"/categories\";\r\n        let resp = await doApiGet(url);\r\n        // console.log(resp.data);\r\n        setCatAr(resp.data);\r\n        // get product props from api \r\n        let urlProduct = API_URL + \"/products/single/\" + params.id;\r\n        let resp2 = await doApiGet(urlProduct);\r\n        console.log(resp2.data)\r\n        setProduct(resp2.data);\r\n    }\r\n\r\n\r\n    const onSubForm = (formData) => {\r\n        // console.log(formData);\r\n        doFormApi(formData);\r\n    }\r\n    const doFormApi = async (formData) => {\r\n        let url = API_URL + \"/products/\" + params.id;\r\n        try {\r\n            let resp = await doApiMethod(url, \"PUT\", formData);\r\n            // console.log(resp.data);\r\n            if (resp.data.modifiedCount) {\r\n                toast.info(\"Product updated\");\r\n                // back to the list of products in the admin panel\r\n                nav(\"/admin/products\")\r\n            }\r\n            else {\r\n                toast.warning(\"You not change nothing for update\")\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.log(err.response);\r\n            alert(\"There problem try again later\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='continer'>\r\n            <AuthAdminComp />\r\n            <h1>updated  product</h1>\r\n            {(product._id) ?\r\n                <form onSubmit={handleSubmit(onSubForm)} className='col-md-6 p-3 shadow'>\r\n                    <label>Name:</label>\r\n                    <input defaultValue={product.name} {...nameRef} type=\"text\" className='form-control' />\r\n                    {errors.name ? <small className='text-danger d-block'>* Enter valid name 2 to 99 chars</small> : \"\"}\r\n\r\n                    <label>Info:</label>\r\n                    <textarea defaultValue={product.info} {...infoRef} className='form-control' rows=\"3\"></textarea>\r\n                    {errors.info ? <small className='text-danger d-block'>* Enter valid info, 3 to 500 chars</small> : \"\"}\r\n                    <label>title:</label>\r\n                    <textarea defaultValue={product.title} {...titleRef} className='form-control' rows=\"3\"></textarea>\r\n                    {errors.title ? <small className='text-danger d-block'>* Enter valid info, 3 to 500 chars</small> : \"\"}\r\n                    <label>text:</label>\r\n                    <textarea defaultValue={product.text} {...textRef} className='form-control' rows=\"3\"></textarea>\r\n                    {errors.text ? <small className='text-danger d-block'>* Enter valid info, 3 to 500 chars</small> : \"\"}\r\n\r\n\r\n                    <label>Qty (amount in the stock):</label>\r\n                    <input defaultValue={product.qty} {...qtyRef} type=\"number\" className='form-control' />\r\n                    {errors.qty ? <small className='text-danger d-block'>* Enter valid  qty, between 1 to 9999</small> : \"\"}\r\n\r\n                    <label>Category:</label>\r\n                    <select defaultValue={product.cat_short_id} {...cat_short_idRef} className='form-select'>\r\n                        <option value=\"\" >Choose Category</option>\r\n                        {cat_ar.map(item => {\r\n                            return (\r\n                                <option key={item._id} value={item.short_id}>{item.name}</option>\r\n                            )\r\n                        })}\r\n                        {/* loop from api of category */}\r\n                    </select>\r\n                    {errors.cat_short_id ? <small className='text-danger d-block'>You must choose category from the list </small> : \"\"}\r\n\r\n                    <label>Img url:</label>\r\n                    <input defaultValue={product.img_url} {...img_urlRef} type=\"text\" className='form-control' />\r\n                    {errors.img_url ? <small className='text-danger d-block'>* Enter valid  img url </small> : \"\"}\r\n\r\n\r\n                    <button className='btn btn-info mt-2 mx-1'>Add new product</button>\r\n                    <Link className='btn btn-danger mt-2' to=\"/admin/products\">Canel</Link>\r\n                </form> : <h2>Loading...</h2>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditProduct","import React from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\nfunction HeaderAdmin(props) {\r\n    let nav = useNavigate()\r\n\r\n    const onLogOutClick = () => {\r\n        if (window.confirm(\"are you sure you want to logout?\"))\r\n            nav(\"/admin/logout\")\r\n    }\r\n    return (\r\n\r\n        <div className='header_admin container-fluid bg-dark d-flex align-items-center'>\r\n            <h2 className='text-white col-auto me-4'>Admin panel</h2>\r\n            <nav className='col-md-9'>\r\n                <Link to=\"/admin/products\">Products</Link>\r\n                <Link to=\"/admin/categories\">Categories</Link>\r\n                <Link to=\"/admin/users\">Users</Link>\r\n                <Link to=\"/\">home</Link>\r\n                {/* i do button Because i cant do nav command to link comp */}\r\n                <button onClick={onLogOutClick} className='btn_loguot  w-15  float-md-end'>Logout</button>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderAdmin","import React from 'react'\r\nimport { Outlet } from 'react-router-dom'\r\nimport HeaderAdmin from './headerAdmin'\r\n\r\nimport \"./admin.css\"\r\n\r\nfunction LayoutAdmin(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <HeaderAdmin />\r\n            <Outlet />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default LayoutAdmin","import React from 'react'\r\nimport { useForm } from \"react-hook-form\"\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { API_URL, doApiMethod } from '../services/apiService';\r\n\r\nfunction LoginAdmin(props) {\r\n    let nav = useNavigate();\r\n    let { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const onSubForm = (data) => {\r\n        console.log(data);\r\n        doApi(data)\r\n\r\n    }\r\n    const doApi = async (_dataBody) => {\r\n        let url = API_URL + \"/users/login\"\r\n        try {\r\n\r\n            let resp = await doApiMethod(url, \"POST\", _dataBody)\r\n            console.log(resp.data);\r\n            if (resp.data.token) {\r\n                localStorage.setItem(\"tok\", resp.data.token);\r\n                // send user to product list\r\n                nav(\"/admin/products\")\r\n                toast.info(\"welcome back\")\r\n            }\r\n            else {\r\n\r\n                toast.error(\"There some error come back later...\")\r\n            }\r\n        }\r\n        catch (err) {\r\n            toast.error(err.response.data.err)\r\n            console.log(err.response.data)\r\n        }\r\n    }\r\n    let emailRef = register(\"email\", {\r\n        required: true,\r\n        pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\r\n\r\n    })\r\n    let passwordRef = register(\"password\", { required: true, minLength: 3 });\r\n\r\n    return (\r\n\r\n        <div className='container'>\r\n            <h1> LoginAdmin to system</h1>\r\n            <form onSubmit={handleSubmit(onSubForm)} className='col-md-6 p-3 border'>\r\n                <label>Email</label>\r\n                <input {...emailRef} type='text' className='form-control' />\r\n                {errors.email ? <small className='text-danger d-block'>* Email invalid </small> : \"\"}\r\n                <label>Password:</label>\r\n                <input {...passwordRef} type='text' className='form-control' />\r\n                {errors.password ? <small className='text-danger d-block'>* Enter  Password invalid you need min 3 chars</small> : \"\"}\r\n                <button className='btn btn-info mt-4'>Login</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginAdmin","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { doApiGet } from '../services/apiService';\r\n\r\n\r\nfunction PageLinks(props) {\r\n    const nav = useNavigate();\r\n    const [pages, setPages] = useState(0)\r\n    useEffect(() => {\r\n        doApi()\r\n\r\n    })\r\n    const doApi = async () => {\r\n        let url = props.apiUrlAmount;\r\n        let resp = await doApiGet(url)\r\n        setPages(Math.ceil(resp.data.amount / props.perPage));\r\n    }\r\n    return (\r\n        <div className='my-3'>\r\n            {[...Array(pages)].map((item, i) => {\r\n                return (\r\n                    <button className={props.clsCss} onClick={() => {\r\n                        nav(props.urlLinkTo + \"?page=\" + (i + 1))\r\n                    }}>{i + 1}</button>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageLinks","import React, { useEffect, useState } from 'react'\r\nimport { Link, useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport AuthAdminComp from '../misc_comps/authAdminComp';\r\nimport PageLinks from '../misc_comps/pageLinks';\r\nimport { API_URL, doApiGet, doApiMethod } from '../services/apiService';\r\n\r\n\r\nfunction ProductAdminList(props) {\r\n    let [ar, setAr] = useState([]);\r\n    let [numPage, setPageNum] = useState(1)\r\n    let [catObj, setCatObj] = useState({})\r\n    let nav = useNavigate();\r\n    let location = useLocation()\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        doApi();\r\n    }, [location])\r\n\r\n    const doApi = async () => {\r\n        // get the product list from server api\r\n\r\n\r\n        try {\r\n            let url0 = API_URL + \"/categories\";\r\n            let resp0 = await doApiGet(url0);\r\n            console.log(resp0.data);\r\n            let temp_ar = resp0.data;\r\n            // var that will assoiative array with short_id that equal\r\n            // to the category name categories_data[\"97548\"] -> cars\r\n            let categories_data = {};\r\n            temp_ar.forEach(item => {\r\n                categories_data[item.short_id] = item.name;\r\n            })\r\n            setCatObj(categories_data)\r\n            const urlParams = new URLSearchParams(window.location.search);\r\n            let pageQuery = urlParams.get(\"page\") || 1;\r\n            setPageNum(pageQuery);\r\n            let url = API_URL + \"/products?page=\" + pageQuery;\r\n            let resp = await doApiGet(url);\r\n            // console.log(resp.data);\r\n            setAr(resp.data);\r\n        }\r\n        catch (err) {\r\n            alert(\"there problem come back later\")\r\n            if (err.response) {\r\n                console.log(err.response.data)\r\n            }\r\n        }\r\n    }\r\n\r\n    const delProduct = async (_idDel) => {\r\n        if (window.confirm(\"Are you sure you want to delete?\")) {\r\n            try {\r\n                let url = API_URL + \"/products/\" + _idDel;\r\n                let resp = await doApiMethod(url, \"DELETE\", {});\r\n                console.log(resp.data);\r\n                if (resp.data.deletedCount) {\r\n                    toast.info(\"product delted !\");\r\n                }\r\n                // for show the new list without the product that we deleted\r\n                doApi();\r\n            }\r\n            catch (err) {\r\n                console.log(err.response);\r\n                alert(\"there problem , try again later\")\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <AuthAdminComp />\r\n            <h1>List of articles in system</h1>\r\n\r\n            <Link to=\"/admin/addProduct\" className=\"btn btn-success\">Add new product</Link>\r\n            {/* cls = className for css */}\r\n            <PageLinks perPage=\"5\" apiUrlAmount={API_URL + \"/products/amount\"} urlLinkTo={\"/admin/products\"} clsCss=\"btn btn-dark me-1\" />\r\n            <table className='table table-striped'>\r\n                <thead>\r\n                    <tr>\r\n                        <th># </th>\r\n                        <th>name</th>\r\n                        <th>info </th>\r\n                        <th>title </th>\r\n                        <th>short_id </th>\r\n                        <th>text </th>\r\n                        <th>qty </th>\r\n                        <th>category</th>\r\n                        <th>del/edit </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {ar.map((item, i) => {\r\n                        return (\r\n                            <tr key={item._id}>\r\n\r\n                                <td>{(i + 1) + 5 * (numPage - 1)}</td>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.info}</td>\r\n                                <td>{item.title}</td>\r\n                                <td>{item.short_id}</td>\r\n                                <td>{item.text}</td>\r\n                                <td>{item.qty}</td>\r\n                                <td>{catObj[item.cat_short_id]}</td>\r\n\r\n                                <td>\r\n                                    <button onClick={() => delProduct(item._id)} className='badge bg-danger mt-1'>x</button>\r\n                                    <button onClick={() => { nav(\"/admin/editProduct/\" + item._id) }} className='badge bg-info'>Edit</button>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            {ar.length === 0 ? <h2>Loading ...</h2> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductAdminList","import React, { useEffect, useState } from 'react'\r\nimport { useForm } from \"react-hook-form\"\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport AuthAdminComp from '../misc_comps/authAdminComp'\r\nimport { API_URL, doApiGet, doApiMethod } from '../services/apiService'\r\n\r\nfunction EditCategory(props) {\r\n    let [category, setCategory] = useState({})\r\n    let [btnSend, setBtnSend] = useState(false);\r\n    let params = useParams();\r\n\r\n    let nav = useNavigate()\r\n    let { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    let nameRef = register(\"name\", { required: true, minLengt: 2, maxLength: 99 })\r\n    let url_nameRef = register(\"url_name\", { required: true, minLengt: 2, maxLength: 500 })\r\n    let img_urlRef = register(\"img_url\", { required: true, minLengt: 2, maxLength: 500 })\r\n\r\n    useEffect(() => {\r\n        doApi();\r\n    }, [])\r\n    const doApi = async () => {\r\n        let urlProduct = API_URL + \"/categories/single/\" + params.url_name;\r\n        let resp2 = await doApiGet(urlProduct);\r\n        console.log(resp2.data)\r\n        setCategory(resp2.data);\r\n    }\r\n    const onSubForm = (formData) => {\r\n        // console.log(formData);\r\n        setBtnSend(true);\r\n        doFormApi(formData);\r\n    }\r\n\r\n    const doFormApi = async (formData) => {\r\n        let url = API_URL + \"/categories/\" + category._id;\r\n        try {\r\n            let resp = await doApiMethod(url, \"PUT\", formData);\r\n            console.log(resp.data);\r\n            if (resp.data.modifiedCount) {\r\n                toast.success(\"Categories updated\");\r\n                nav(\"/admin/categories\")\r\n            }\r\n            else {\r\n                toast.warning(\"you not change nothing\");\r\n\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.log(err.response);\r\n            alert(\"There problem try again leter\")\r\n\r\n        }\r\n    }\r\n    return (\r\n        <div className='container'>\r\n            <AuthAdminComp />\r\n            <h1>Edit  category</h1>\r\n            {(category._id) ?\r\n                <form onSubmit={handleSubmit(onSubForm)} className='col-md-6 p-3 shadow'>\r\n                    <label>Name:</label>\r\n                    <input defaultValue={category.name} {...nameRef} type=\"text\" className='form-control' />\r\n                    {errors.name ? <small className='text-danger d-block'>* Enter valid name 2 to 99</small> : \"\"}\r\n                    <label>url name:</label>\r\n                    <input defaultValue={category.url_name} {...url_nameRef} type=\"text\" className='form-control' />\r\n                    {errors.url_name ? <small className='text-danger d-block'>* Enter valid url_name 2 to 500</small> : \"\"}\r\n                    <label>Img url:</label>\r\n                    <input defaultValue={category.img_url} {...img_urlRef} type=\"text\" className='form-control' />\r\n                    {errors.img_url ? <small className='text-danger d-block'>* Enter valid url_name 2 to 500</small> : \"\"}\r\n\r\n                    <button className='mt-4 btn btn-warning' disabled={btnSend}> update new category</button>\r\n                </form> : <h2>Loading...</h2>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditCategory","import React, { useEffect, useState } from 'react'\r\n// import { useNavigate } from 'react-router-dom';\r\nimport AuthAdminComp from '../misc_comps/authAdminComp';\r\nimport { API_URL, doApiGet, doApiMethod } from '../services/apiService';\r\n\r\nfunction UsersList(props) {\r\n    let [ar, setAr] = useState([]);\r\n    // let nav = useNavigate()\r\n\r\n    useEffect(() => {\r\n        doApi()\r\n    }, [])\r\n\r\n    const doApi = async () => {\r\n        let url = API_URL + \"/users/usersList\";\r\n        try {\r\n            let resp = await doApiGet(url);\r\n            // console.log(resp.data);\r\n            setAr(resp.data);\r\n        }\r\n        catch (err) {\r\n            alert(\"there problem come back later\")\r\n            if (err.response) {\r\n                console.log(err.response.data)\r\n            }\r\n        }\r\n    }\r\n\r\n    const delUser = async (_idDel) => {\r\n\r\n    }\r\n    const changeRole = async (_userId, _role) => {\r\n        let url = API_URL + `/users/changeRole/${_userId}/${_role}`;\r\n        try {\r\n            let resp = await doApiMethod(url, \"PATCH\", {});\r\n            if (resp.data.modifiedCount) {\r\n                doApi();\r\n            }\r\n        }\r\n        catch (err) {\r\n            alert(\"there problem come back later\")\r\n            if (err.response) {\r\n                console.log(err.response.data)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <AuthAdminComp />\r\n            <h1>List of Users in system</h1>\r\n            <table className='table table-striped'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>name</th>\r\n                        <th>email</th>\r\n                        <th>address</th>\r\n                        <th>role</th>\r\n                        <th>del</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {ar.map((item, i) => {\r\n                        return (\r\n                            <tr key={item._id}>\r\n                                <td>{i + 1}</td>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.email}</td>\r\n                                <td>{item.address}</td>\r\n                                <td>\r\n                                    {(item.role === \"admin\") ?\r\n                                        <button onClick={() => {\r\n                                            changeRole(item._id, \"user\")\r\n                                        }} className='btn btn-warning'>admin</button>\r\n                                        :\r\n                                        <button\r\n                                            onClick={() => {\r\n                                                changeRole(item._id, \"admin\")\r\n                                            }}\r\n                                            className='btn btn-dark'>user</button>\r\n                                    }\r\n\r\n                                </td>\r\n                                <td>\r\n                                    <button onClick={() => { delUser(item._id) }} className='badge bg-danger'>X</button>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            {ar.length === 0 ? <h2>Loading...</h2> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsersList;","import React, { useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction LogoutAdmin(props) {\r\n    let nav = useNavigate();\r\n\r\n    useEffect(() => {\r\n        localStorage.removeItem(\"tok\");\r\n        nav(\"/admin\")\r\n        toast.info(\"you log out from system \")\r\n    }, [])\r\n\r\n    return (\r\n        <div> please wait... to log out.</div>\r\n    )\r\n}\r\n\r\nexport default LogoutAdmin","import React, { useEffect, useState } from 'react'\r\nimport { API_URL, doApiGet } from \"../services/apiService\"\r\nimport { Link } from 'react-router-dom';\r\nfunction ArticelsCatgoryList(props) {\r\n    const [ar, SetAr] = useState([]);\r\n\r\n    useEffect(() => {\r\n        doApi();\r\n    }, [])\r\n\r\n    const doApi = async () => {\r\n        let url = API_URL + \"/categories\";\r\n        let resp = await doApiGet(url)\r\n        // console.log(resp.data);\r\n        SetAr(resp.data);\r\n    }\r\n    return (\r\n        <div className='container-fluid shadow'>\r\n            <div className='container py-4 categories_list'>\r\n                <h2 className='text-center'>Coose category of product you want to read</h2>\r\n                <div className='row'>\r\n                    {ar.map(item => {\r\n                        return (\r\n                            <Link to={\"/products/\"+item.url_name} key={item._id} className='myCard col-md-4 p-3  '>\r\n                                <div className='shadow bg-dark text-white'>\r\n                                    {/* check if there bg image */}\r\n\r\n                                    <div style={{ backgroundImage: `url(${item.img_url || \"/images/logo512.jpg\"})` }} className='img_card'></div>\r\n\r\n\r\n                                    <h3 className='p-2 text-center'>{item.name}</h3>\r\n                                </div>\r\n                            </Link>)\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArticelsCatgoryList","import React from 'react'\r\n\r\nfunction ArticlsStrip(props) {\r\n    return (\r\n        <div style={{ backgroundImage: \"url(/images/img_slider.jpg)\" }} className='strip_articels container-fluid d-flex align-item-center'>\r\n            <div className='container text-center'>\r\n                <h2 className='h1'>  welcome to  articels to onle for registeres</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArticlsStrip","// save short ids of products we visited in to show after in the home page\r\nexport const VISITED_PRODUCT = \"visitedProduct\";\r\n\r\n\r\nexport const addProdVisitedToLocal = (_short_id) => {\r\n    // if there local of products local_ar equal to the data in local if not equal to new array\r\n    // Primitive array cant do stringfy or parse , need to use split or join\r\n    // split - like parse of JSON for primtive array\r\n    let local_ar = localStorage[VISITED_PRODUCT] ? localStorage[VISITED_PRODUCT].split(\",\") : [];\r\n    // check if id already in local \r\n    if (!local_ar.includes(_short_id)) {\r\n        // add new cell in array in the start\r\n        local_ar.unshift(_short_id);\r\n        // for save only 4 products\r\n        local_ar.splice(4, local_ar.length);\r\n        console.log(local_ar)\r\n        // Primitive array cant do stringfy or parse , need to use split or join \r\n        // join like stringfy of JSON just for primitive array\r\n        localStorage.setItem(VISITED_PRODUCT, local_ar.join(\",\"));\r\n    }\r\n}\r\n\r\n// return the shorts_id of products we visited as string for \r\n// URL to api request\r\nexport const checkVisitedLocal = () => {\r\n    if (localStorage[VISITED_PRODUCT]) {\r\n        return localStorage[VISITED_PRODUCT];\r\n    }\r\n    return null;\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ProductItem(props) {\r\n    let item = props.item;\r\n    return (\r\n        <div className='product-item col-md-3 p-2'>\r\n            <div className='shadow'>\r\n                <div style={{ backgroundImage: `url(${item.img_url || \"/images/logo512.png\"})` }} className='product-img'></div>\r\n                <div className='p-2'>\r\n                    <h4>{item.name}</h4>\r\n                    <div className='text-start'>info: {item.info}</div>\r\n                    <div className='text-center my-2'>\r\n                        <Link className='btn btn-dark w-50' to={\"/productInfo/\" + item._id}>More info</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductItem","import React, { useEffect, useState } from 'react'\r\nimport { API_URL, doApiGet } from '../services/apiService';\r\nimport { checkVisitedLocal, VISITED_PRODUCT } from '../services/localServices';\r\n\r\nimport ProductItem from './productItem';\r\n\r\n\r\nfunction ProductArticels(props) {\r\n    let [ar, SetAr] = useState([])\r\n\r\n    useEffect(() => {\r\n        doApi();\r\n    }, [])\r\n\r\n    const doApi = async () => {\r\n        // check if there products saved in the local that user visited in\r\n        let vistedProds = checkVisitedLocal();\r\n        let url;\r\n        if (vistedProds) {\r\n            url = API_URL + \"/products/visited?visited=\" + vistedProds;\r\n        }\r\n        else {\r\n            url = API_URL + \"/products?perPage=4\";\r\n        }\r\n        let resp = await doApiGet(url);\r\n        console.log(resp.data);\r\n        SetAr(resp.data);\r\n    }\r\n\r\n    return (\r\n        <div className='container p-4'>\r\n            {localStorage[VISITED_PRODUCT] ?\r\n                <h2 className='text-center text-info'>product you intersted in </h2> :\r\n                <h2 className='text-center mt-2'>new Product in our side</h2>\r\n            }\r\n            <div className='row'>\r\n                {ar.map(item => {\r\n                    return (\r\n                        <ProductItem key={item._id} item={item} />\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductArticels","import React from 'react'\r\nimport ArticelsCatgoryList from './articelsCatgoryList'\r\nimport ArticlsStrip from './articelsStrip'\r\nimport \"./css/articelsUser.css\"\r\nimport ProductArticels from './productArticels'\r\nfunction ArticelsUser(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <ArticlsStrip />\r\n            <ArticelsCatgoryList />\r\n            <ProductArticels />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ArticelsUser","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { API_URL, doApiGet } from '../services/apiService';\r\nimport ProductItem from './productItem';\r\n\r\n\r\nfunction ProductsListPage(props) {\r\n    const [ar, setAr] = useState([])\r\n\r\n    let params = useParams();\r\n\r\n    useEffect(() => {\r\n        doApi();\r\n    }, []);\r\n\r\n    const doApi = async () => {\r\n\r\n        // קודם כל אוסף מידע על הקטגוריה לפי היו אר אל שלה\r\n        // כדי שיהיה לי את האיי די המקוצר להביא את כל המוצרים\r\n        let urlCategory = API_URL + \"/categories/single/\" + params.cat_url;\r\n        let resp1 = await doApiGet(urlCategory);\r\n        // console.log(resp1.data);\r\n        let short_id = resp1.data?.short_id;\r\n\r\n        let urlProds = API_URL + \"/products/?perPage=8&cat=\" + short_id;\r\n        let resp2 = await doApiGet(urlProds)\r\n        // console.log(resp2.data);\r\n\r\n        setAr(resp2.data)\r\n\r\n    }\r\n    // TODO: ADD PAGENATION\r\n    return (\r\n        <div className='container-fluid' style={{ minHeight: \"85vh\" }}>\r\n            <div className=\"container\">\r\n                <h1 className='text-center'>Categories of {params.cat_url}</h1>\r\n                {ar.length == 0 ? <h2>Loading...</h2> : \"\"}\r\n                <div className=\"row\">\r\n                    {ar.map(item => {\r\n                        return (\r\n                            <ProductItem key={item._id} item={item} />\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductsListPage","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { API_URL, doApiGet } from '../services/apiService'\r\nimport { addProdVisitedToLocal } from '../services/localServices';\r\n\r\nfunction ProductInfo(props) {\r\n    const [product, SetProduct] = useState({})\r\n    let params = useParams();\r\n    let nav = useNavigate();\r\n\r\n    useEffect(() => {\r\n        doApi();\r\n    }, [])\r\n\r\n    const doApi = async () => {\r\n        let url = API_URL + \"/products/single/\" + params.id;\r\n        let resp = await doApiGet(url);\r\n        console.log(resp.data);\r\n        SetProduct(resp.data)\r\n        //  save in visited in local\r\n        addProdVisitedToLocal(resp.data.short_id)\r\n    }\r\n    return (\r\n        <div className='container' style={{ minHeight: \"85vh\" }}>\r\n            <div className='row '>\r\n                <div className='col-md-4'>\r\n                    {/* img-fluid - real width of pics or width 100%  */}\r\n                    <img src={product.img_url || \"/images/logo512.png\"} alt={product.name} className='img-fluid img-tumbnall shadow' />\r\n                </div>\r\n                <div className='col-md-8 '>\r\n                    <h2 className='display-4'> {product.name}</h2>\r\n                    <p><strong>info: </strong> {product.info}</p>\r\n                    <h3>title: {product.title}</h3>\r\n                    <h2>text: {product.text}</h2>\r\n                    <button onClick={() => {\r\n                        nav(-1);\r\n                    }} className={'btn btn-dark'}>back</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductInfo","import React from 'react'\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\n\r\nimport Home from './comps/home';\r\nimport LayoutClient from './comps/layoutClient'\r\nimport AddProduct from './comps_admin/addProduct';\r\nimport AddCategory from './comps_admin/addCategory';\r\nimport CategoriesList from './comps_admin/categoriesList';\r\nimport EditProduct from './comps_admin/editProduct';\r\nimport LayoutAdmin from './comps_admin/layoutAdmin';\r\nimport LoginAdmin from './comps_admin/loginAdmin';\r\nimport ProductAdminList from './comps_admin/productAdminList';\r\nimport EditCategory from './comps_admin/editCategory';\r\nimport UsersList from './comps_admin/usersList';\r\nimport LogoutAdmin from './comps_admin/logoutAdmin';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport ArticelsUser from './comps/articelsUser';\r\nimport ProductListPage from './comps/productListPage';\r\nimport ProductInfo from './comps/productInfo';\r\nfunction AppRoute(props) {\r\n    return (\r\n        <Router>\r\n            <Routes>\r\n                {/* for user admin */}\r\n                <Route path='/admin' element={<LayoutAdmin />}>\r\n                    <Route index element={<LoginAdmin />} />\r\n                    <Route path=\"/admin/products\" element={<ProductAdminList />} />\r\n                    <Route path=\"/admin/addProduct\" element={<AddProduct />} />\r\n                    <Route path=\"/admin/editProduct/:id\" element={<EditProduct />} />\r\n                    <Route path=\"/admin/editCategory/:url_name\" element={<EditCategory />} />\r\n                    <Route path=\"/admin/categories\" element={<CategoriesList />} />\r\n                    <Route path=\"/admin/addCategory\" element={<AddCategory />} />\r\n                    <Route path=\"/admin/users\" element={<UsersList />} />\r\n                    <Route path=\"/admin/logout\" element={<LogoutAdmin />} />\r\n\r\n                </Route>\r\n                {/* for user regular */}\r\n                <Route path='/' element={< LayoutClient />}>\r\n                    <Route index element={< Home />} />\r\n                    <Route path='/articelsUser' element={< ArticelsUser />} />\r\n                    <Route path=\"/products/:cat_url\" element={< ProductListPage />} />\r\n                    <Route path='/productInfo/:id' element={< ProductInfo />} />\r\n                </Route>\r\n            </Routes>\r\n            <ToastContainer position='top-right' theme='colored' />\r\n        </Router>\r\n\r\n    )\r\n}\r\n\r\nexport default AppRoute","import React from 'react';\r\nimport './App.css';\r\nimport AppRoute from './appRoute';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n\r\n    <React.Fragment>\r\n      <AppRoute />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}